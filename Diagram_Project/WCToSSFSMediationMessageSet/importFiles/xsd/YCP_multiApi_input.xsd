<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://www.sterlingcommerce.com/documentation/YCP/multiApi/input"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:yfc="http://www.sterlingcommerce.com/documentation/YCP/multiApi/input" xmlns:yfctype="http://www.sterlingcommerce.com/documentation/types">
    <xsd:annotation yfc:fileName="YCP_multiApi_input.xsd" yfc:rootElement="MultiApi">
        <xsd:appinfo source="yfc:structure">
            <MultiApi>
                <API hasAttributes="Y">
                    <Input/>
                    <Template/>
                </API>
            </MultiApi>
        </xsd:appinfo>
    </xsd:annotation>
    <xsd:import
        namespace="http://www.sterlingcommerce.com/documentation/types" schemaLocation="datatypes.xsd"/>
    <xsd:element name="MultiApi" type="yfc:MultiApiXSDType"/>
    <xsd:complexType name="MultiApiXSDType">
        <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="1" ref="yfc:API"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="API">
        <xsd:annotation>
            <xsd:documentation>
                <div> Provide either the <code>Name</code> of the API or <code>FlowName</code> of the service.</div>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:all>
                <xsd:element maxOccurs="1" minOccurs="1" ref="yfc:Input"/>
                <xsd:element maxOccurs="1" minOccurs="0" ref="yfc:Template"/>
            </xsd:all>
            <xsd:attribute name="FlowName" type="yfctype:Text-100" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        <div>
		Name of the flow or service to call.
		</div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="IsExtendedDbApi" type="yfctype:String" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        <div>
		Set value to Y only if calling an extended database api.
		</div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Name" type="yfctype:Text-100" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        <div>
		Name of the API to call.
		</div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Version" type="yfctype:Text-10" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        <div>
		Version number of the API. Only provide a value if a specific version of the API is needed.
		</div>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="Input">
        <xsd:annotation>
            <xsd:documentation>
                <div>
	 The Input element must contain a child element that corresponds to
 the document element of the API input
	</div>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="skip"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="Template">
        <xsd:annotation>
            <xsd:documentation>
                <div>
	 The Template element (if given) may contain a child element that corresponds to
 the document element of the template to use for the API call
	</div>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="skip"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
</xsd:schema>
